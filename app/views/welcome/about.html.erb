<head>
  <title>ABOUT|SoshineSee</title>
  <script type="text/javascript" src="demo/Boluo_Groundlay.js"></script>
  <script type="text/javascript" src="http://api.map.baidu.com/api?v=2.0&ak=NccogPfKH2hGdsARVdK7lsVvNao7Y4Hm"></script>
</head>
<body>
<div>
  <button type="button" class="btn-primary" onclick="addpolygon()">POLYGON</button>
  <button type="button" class="btn-primary" onclick="addzone()" id="zoom">ZONE</button>
</div>
<div id="allmap" style="height: 100%">

</div>


<script type="text/javascript">
  // 百度地图API功能
  var map = new BMap.Map("allmap",{mapType:BMAP_NORMAL_MAP});    // 创建Map实例
  //BMAP_NORMAL_MAP
  //BMAP_HYBRID_MAP
  var ggn = 23.130875645889883;
  var ggs = 23.121166927809885;
  var gge = 114.20237471986587;
  var ggw = 114.19187761906588;

  //ABCD Point
  var wnP = new BMap.Point(ggw,ggn);
  var enP = new BMap.Point(gge,ggn);
  var esP = new BMap.Point(gge,ggs);
  var wsP = new BMap.Point(ggw,ggs);

  var centerP = new BMap.Point((ggw+gge)/2,(ggn+ggs)/2);
  map.centerAndZoom(centerP, 16);  // 初始化地图,设置中心点坐标和地图级别
  map.addControl(new BMap.MapTypeControl());   //添加地图类型控件
  map.setCurrentCity("惠州");          // 设置地图显示的城市 此项是必须设置的
  map.enableScrollWheelZoom(true);     //开启鼠标滚轮缩放

  var tilelayer = new BMap.TileLayer();
  tilelayer.getTilesUr=function(){
    return "/assets/demo/soshineseeA/boluo_A_nvdi_s.png";
  };
  map.addTileLayer(tilelayer);

  function addpolygon(){
    //kml <label>
    polygon = new BMap.Polygon([wnP,enP,esP,wsP], polygonOptions);  //创建多边形
    //map.clearOverlays();
    map.addOverlay(polygon);           //增加多边形覆盖物
  }

  function addzone(){
    zoomindex = map.getZoom();
    document.getElementById("zoom").innerHTML = "ZONE:"+zoomindex;
  }
  var TILE_SIZE = 256;

  map.addEventListener('click', function(e){
    var info = new BMap.InfoWindow('', {width: 260});
    var projection = this.getMapType().getProjection();

    var lngLat = e.point;
    var lngLatStr = "经纬度：" + lngLat.lng + ", " + lngLat.lat;

    var worldCoordinate = projection.lngLatToPoint(lngLat);
    var worldCoordStr = "<br />平面坐标：" + worldCoordinate.x + ", " + worldCoordinate.y;

    var pixelCoordinate = new BMap.Pixel(Math.floor(worldCoordinate.x * Math.pow(2, this.getZoom() - 18)),
        Math.floor(worldCoordinate.y * Math.pow(2, this.getZoom() - 18)));
    var pixelCoordStr = "<br />像素坐标：" + pixelCoordinate.x + ", " + pixelCoordinate.y;

    var tileCoordinate = new BMap.Pixel(Math.floor(pixelCoordinate.x / 256),
        Math.floor(pixelCoordinate.y / 256));
    var tileCoordStr = "<br />图块坐标：" + tileCoordinate.x + ", " + tileCoordinate.y;

    var viewportCoordinate = map.pointToPixel(lngLat);
    var viewportCoordStr = "<br />可视区域坐标：" + viewportCoordinate.x + ", " + viewportCoordinate.y;

    var overlayCoordinate = map.pointToOverlayPixel(lngLat);
    var overlayCoordStr = "<br />覆盖物坐标：" + overlayCoordinate.x + ", " + overlayCoordinate.y;

    info.setContent(lngLatStr + worldCoordStr + pixelCoordStr + tileCoordStr +
        viewportCoordStr + overlayCoordStr);
    map.openInfoWindow(info, lngLat);
  });

  function SquareOverlay(center, length, color){
    this._center = center;
    this._length = length;
    this._color = color;
  }

  //2.设置自定义覆盖物对象的prototype属性为Overlay的实例，以便继承覆盖物基类。
  // 继承API的BMap.Overlay
  SquareOverlay.prototype = new BMap.Overlay();


  //3.实现initialize方法，当调用map.addOverlay方法时，API会调用此方法。
  // 实现初始化方法
  SquareOverlay.prototype.initialize = function(map){
// 保存map对象实例
    this._map = map;
    // 创建div元素，作为自定义覆盖物的容器
    var div = document.createElement("div");
    div.style.position = "absolute";
    // 可以根据参数设置元素外观
    div.style.width = this._length + "px";
    div.style.height = this._length + "px";
    //div.style.backgroundColor = this._color;
    div.style.backgroundImage = "url('/assets/demo/soshineseeA/boluo_A_nvdi_s.png')";

// 将div添加到覆盖物容器中
    map.getPanes().mapPane.appendChild(div);
// 保存div实例
    this._div = div;
// 需要将div元素作为方法的返回值，当调用该覆盖物的show、
// hide方法，或者对覆盖物进行移除时，API都将操作此元素。
    return div;
  };


  //4.实现draw方法。
  // 实现绘制方法
  SquareOverlay.prototype.draw = function(){
// 根据地理坐标转换为像素坐标，并设置给容器
    var position = this._map.pointToOverlayPixel(this._center);
    this._div.style.left = position.x - this._length / 2 + "px";
    this._div.style.top = position.y - this._length / 2 + "px";
  };

  // 实现显示方法
  SquareOverlay.prototype.show = function(){
    if (this._div){
      this._div.style.display = "";
    }
  };
  // 实现隐藏方法
  SquareOverlay.prototype.hide = function(){
    if (this._div){
      this._div.style.display = "none";
    }
  };


  SquareOverlay.prototype.toggle = function(){
    if (this._div){
      if (this._div.style.display == ""){
        this.hide();
      }
      else {
        this.show();
      }
    }
  };


</script>

</body>
